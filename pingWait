#!/usr/bin/env python

import ping, argparse, time, os, sys

parser = argparse.ArgumentParser(description='Will ping host until it replies.')

#parser.add_argument('-H', '--hostname', dest='hostname', required=True, help='Host name, IP Address')
parser.add_argument('hostname', default=1, metavar='HOSTNAME', help='Hostname or ip of the target host.')
parser.add_argument('-b', dest='beep', action='store_true', required=False, help='Beep when found')
parser.add_argument('--eternal', dest='eternal', action='store_true', required=False, help='Will continue to ping.')
parser.add_argument('-d', default=5, metavar='N', dest='delay', type=int, required=False, help='Sleep delay between pings.')
parser.add_argument('-v', dest='verbose', action='store_true', required=False, help='Verbose')
parser.add_argument('-t', default=1, metavar='N', dest='timeout', type=int, required=False, help='Ping timeout in seconds.')

args = parser.parse_args()

#print ', '.join("%s: %s" % item for item in vars(os).items())

#if os.geteuid() != 0:
#  print 'You need to be root to send ping packets, running sudo...'
#  args = ['sudo', sys.executable] + sys.argv + [os.environ]
#  os.execlpe('sudo', *args)

def isAdmin():
  if os.name == 'nt':
    import ctypes
    
    try:
      if ctypes.windll.shell32.IsUserAnAdmin():
        return True
    except:
      traceback.print_exc()
      print "Admin check failed, assuming not an admin."
      
    return False
  elif os.name == 'posix':
    return os.geteuid() == 0
  
script = os.path.abspath(sys.argv[0])
params = ' '.join([script] + sys.argv[1:] + ['asd'])

print([script] + sys.argv[1:] + ['asd'])
exit(0)

while True:
  pingResult = ping.quiet_ping(args.hostname, count=1, timeout=args.timeout)

  if pingResult[1] != None:
    if not args.verbose:
      sys.stdout = sys.__stdout__
    if args.beep:
      print("\x07" * 3)
    if not args.eternal:
      exit(0)

  time.sleep(args.delay);
